plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}
signing {
    sign publishing.publications
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.dounine'
                artifactId = 'tmsdk'
                version = '1.0.2'
                from components.release
                artifact sourcesJar

                pom {
                    name = artifactId
                    description = "android tmsdk base analyse"
                    url = 'https://github.com/dounine/tmsdk'
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'lake'
                            name = 'lake'
                            email = 'amwoqmgo@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/dounine/tmsdk.git'
                        developerConnection = 'scm:git:ssh://git@github.com/dounine/tmsdk.git'
                        url = 'https://github.com/dounine/tmsdk/'
                    }
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username System.getenv("NEXUS_USERNAME") ?: NEXUS_USERNAME
                    password System.getenv("NEXUS_PASSWORD") ?: NEXUS_PASSWORD
                }
            }
//            maven { //发布到github package
//                url = uri("https://maven.pkg.github.com/dounine/tmsdk")
//                credentials {
//                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME") ?: GITHUB_USERNAME
//                    password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN") ?: GITHUB_TOKEN
//                }
//            }
        }
    }
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

repositories {
    mavenCentral()
    google()
}


dependencies {
    implementation 'com.alibaba:fastjson:1.2.37'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.blankj:utilcodex:1.31.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.10'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}